-- Student table
CREATE TABLE STUDENT( USN VARCHAR(25) PRIMARY KEY,SNAME VARCHAR(25),ADDRESS VARCHAR(25),FEESPAID CHAR(1),GENDER CHAR(1),ATTENDENCE INTEGER(3));
ALTER TABLE STUDENT ALTER USN SET DEFAULT 1000;
INSERT INTO STUDENT VALUES('ENG17CS0120','RASHMITA','MANGALURU','Y','F',34);
INSERT INTO STUDENT VALUES('ENG17CS0117','RAJESH','BENGALURU','Y','M',89);
INSERT INTO STUDENT VALUES('ENG18CS0118','RAKESH','TUMKUR','Y','M',86);
INSERT INTO STUDENT VALUES('ENG18CS0119','RAMESH','BENGALURU','Y','M',67);
INSERT INTO STUDENT VALUES('ENG19CS0122','ROHAN','BENGALURU','Y','M',100);
INSERT INTO STUDENT VALUES('ENG19CS0123','SAKSHI','MYSURU','N','F',98);
INSERT INTO STUDENT VALUES('ENG20CS0116','RAHUL','BENGALURU','Y','M',78);
INSERT INTO STUDENT VALUES('ENG20CS0121','RIDHI','BENGALURU','Y','F',45);
-- Faculty table
CREATE TABLE FACULTY( FID INTEGER(10) PRIMARY KEY,FNAME VARCHAR(25));
ALTER TABLE FACULTY ALTER FID SET DEFAULT 1000;
INSERT INTO FACULTY VALUES(11012,'RADHA');
INSERT INTO FACULTY VALUES(11014,'TEJAS');
INSERT INTO FACULTY VALUES(11017,'MEHUL');
INSERT INTO FACULTY VALUES(11021,'RITHIKA');
INSERT INTO FACULTY VALUES(11022,'AASTHA');
INSERT INTO FACULTY VALUES(11024,'MADHU');
INSERT INTO FACULTY VALUES(11033,'HUSSAIN');
INSERT INTO FACULTY VALUES(11038,'PETER');
INSERT INTO FACULTY VALUES(11041,'SANJANA');
-- Semester and section table
CREATE TABLE SEMSEC( SSID VARCHAR(5) PRIMARY KEY,SEM INTEGER(2),SEC CHAR(1),CLASSADVISOR VARCHAR(25));
ALTER TABLE SEMSEC ALTER SSID SET DEFAULT 1000;
INSERT INTO SEMSEC VALUES('CSE3A',3,'A','RADHA');
INSERT INTO SEMSEC VALUES('CSE3B',3,'B','MADHU');
INSERT INTO SEMSEC VALUES('CSE5D',5,'D','HUSSAIN');
INSERT INTO SEMSEC VALUES('CSE5F',5,'F','PETER');
INSERT INTO SEMSEC VALUES('CSE7A',7,'A','RITHIKA');
INSERT INTO SEMSEC VALUES('CSE7C',3,'C','MEHUL');
INSERT INTO SEMSEC VALUES('CSE8B',8,'B','TEJAS');
INSERT INTO SEMSEC VALUES('CSE8D',3,'D','AASTHA');
-- Class table
CREATE TABLE CLASS( USN VARCHAR(25),SSID VARCHAR(5),PRIMARY KEY(USN,SSID),FOREIGN KEY(USN) REFERENCES STUDENT (USN),FOREIGN KEY(SSID) REFERENCES SEMSEC (SSID));
ALTER TABLE CLASS ALTER USN SET DEFAULT 1000;
ALTER TABLE CLASS ALTER SSID SET DEFAULT 1000;
INSERT INTO CLASS VALUES('ENG20CS0116','CSE3A');
INSERT INTO CLASS VALUES('ENG20CS0121','CSE3B');
INSERT INTO CLASS VALUES('ENG19CS0122','CSE5D');
INSERT INTO CLASS VALUES('ENG19CS0123','CSE5F');
INSERT INTO CLASS VALUES('ENG18CS0119','CSE7A');
INSERT INTO CLASS VALUES('ENG18CS0118','CSE7C');
INSERT INTO CLASS VALUES('ENG17CS0117','CSE8B');
INSERT INTO CLASS VALUES('ENG17CS0120','CSE8D');
-- Subject tables
CREATE TABLE SUBJECT( SUBCODE VARCHAR(8),TITLE VARCHAR(20),SEM INTEGER(2),CREDITS INTEGER(2),PRIMARY KEY (SUBCODE));
ALTER TABLE SUBJECT ALTER SUBCODE SET DEFAULT 1000;
INSERT INTO SUBJECT VALUES('17EN1104','ACA',8,4);
INSERT INTO SUBJECT VALUES('17EN1108','MSD',8,3);
INSERT INTO SUBJECT VALUES('18EN1117','DFG',7,3);
INSERT INTO SUBJECT VALUES('18EN1121','ADT',7,2);
INSERT INTO SUBJECT VALUES('19EN1111','FGS',5,2);
INSERT INTO SUBJECT VALUES('19EN1123','FOP',5,4);
INSERT INTO SUBJECT VALUES('20EN1131','ERT',3,4);
INSERT INTO SUBJECT VALUES('20EN1114','AFFGV',3,4);
-- Assignment table
CREATE TABLE ASSIGNMENT( USN VARCHAR(25),DOS DATE,AMARKS INTEGER(2),PRIMARY KEY (USN),FOREIGN KEY (USN) REFERENCES STUDENT (USN));
ALTER TABLE ASSIGNMENT ALTER USN SET DEFAULT 1000;
INSERT INTO ASSIGNMENT VALUES('ENG17CS0117','2021-11-09',19);
INSERT INTO ASSIGNMENT VALUES('ENG17CS0120','2021-12-01',18);
INSERT INTO ASSIGNMENT VALUES('ENG18CS0118','2021-11-15',18);
INSERT INTO ASSIGNMENT VALUES('ENG18CS0119','2021-11-19',25);
INSERT INTO ASSIGNMENT VALUES('ENG19CS0123','2021-12-03',25);
INSERT INTO ASSIGNMENT VALUES('ENG19CS0122','2021-12-01',25);
INSERT INTO ASSIGNMENT VALUES('ENG20CS0121','2021-11-26',19);
INSERT INTO ASSIGNMENT VALUES('ENG20CS0116','2021-12-08',21);
-- Marks table
CREATE TABLE MARKS( USN VARCHAR(25),SUBCODE VARCHAR(8),TEST1 INTEGER(2),TEST2 INTEGER(2),CBT INTEGER(2),ASSIGN INTEGER(2),SUBTOTAL INTEGER(2),GRADEPOINT INT(2),SUBCREDIT INTEGER(2),SUBCGPA INTEGER(3), PRIMARY KEY (USN,SUBCODE), FOREIGN KEY (USN) REFERENCES STUDENT (USN), FOREIGN KEY (SUBCODE) REFERENCES SUBJECT (SUBCODE));
ALTER TABLE MARKS ALTER USN SET DEFAULT 1000;
ALTER TABLE MARKS ALTER SUBCODE SET DEFAULT 1000;
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG17CS0117','17EN1104',5,13,12);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG17CS0117','17EN1108',20,12,25);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG17CS0120','17EN1104',13,21,17);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG17CS0120','17EN1108',16,23,19);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG18CS0118','18EN1117',11,16,25);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG18CS0118','18EN1121',12,11,21);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG18CS0119','18EN1117',9,22,18);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG18CS0119','18EN1121',25,14,9);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG19CS0122','19EN1111',25,23,24);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG19CS0122','19EN1123',23,24,25);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG19CS0123','19EN1111',5,24,18);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG19CS0123','19EN1123',23,7,16);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG20CS0121','20EN1131',12,9,25);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG20CS0121','20EN1114',11,12,24);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG20CS0116','20EN1131',20,12,11);
INSERT INTO MARKS (USN,SUBCODE,TEST1,TEST2,CBT) VALUES ('ENG20CS0116','20EN1114',5,4,25);
UPDATE MARKS SET ASSIGN= (SELECT AMARKS AS ASSIGN FROM ASSIGNMENT WHERE MARKS.USN=ASSIGNMENT.USN);
UPDATE MARKS SET SUBTOTAL = TEST1 + TEST2 + CBT + ASSIGN;
UPDATE MARKS SET GRADEPOINT=(SUBTOTAL/10)-1;
UPDATE MARKS SET SUBCREDIT= (SELECT CREDITS AS SUBCREDIT FROM SUBJECT WHERE MARKS.SUBCODE=SUBJECT.SUBCODE);
UPDATE MARKS SET SUBCGPA= SUBCREDIT * GRADEPOINT;
-- Report Card TABLE
CREATE TABLE REPORTCARD( USN VARCHAR(25),TOTAL INTEGER(3),CGPA DECIMAL(2,1));
ALTER TABLE REPORTCARD ALTER USN SET DEFAULT 1000;
INSERT INTO REPORTCARD (USN) SELECT USN FROM STUDENT;
UPDATE REPORTCARD SET CGPA = (SELECT SUM(SUBCGPA) FROM MARKS WHERE REPORTCARD.USN=MARKS.USN GROUP BY USN) / (SELECT SUM(SUBCREDIT) FROM MARKS WHERE REPORTCARD.USN= MARKS.USN GROUP BY USN);
UPDATE REPORTCARD SET TOTAL = (SELECT SUM(SUBTOTAL) FROM MARKS WHERE REPORTCARD.USN = MARKS.USN GROUP BY REPORTCARD.USN);
-- Queries start
-- 1. Trigger to ensure marks are entered in the range of 0 to 25
DELIMITER //
CREATE DEFINIER='root'@'localhost' TRIGGER MARKSCHECK BEFORE INSERT ON MARKS
	FOR EACH ROW
	BEGIN
		IF NEW.TEST1 < 0 OR NEW.TEST1 > 25 THEN
			SET NEW.TEST1=0;
		END IF;
		IF NEW.TEST2 < 0 OR NEW.TEST2 > 25 THEN
			SET NEW.TEST2=0;
		END IF;
		IF NEW.CBT < 0 OR NEW.CBT > 25 THEN
			SET NEW.CBT=0;
		END IF; 
	END;//
CREATE DEFINIER='root'@'localhost' TRIGGER AMARKSCHECK BEFORE INSERT ON ASSIGNMENT
	FOR EACH ROW
	BEGIN
		IF NEW.AMARKS < 0 OR NEW.AMARKS > 25 THEN
			SET NEW.AMARKS=0;
		END IF;
	END;//
DELIMITER;
-- 2. To know the number of students
CREATE OR REPLACE VIEW NUM_OF_STUDENTS AS (SELECT COUNT(*) FROM STUDENT);
SELECT * FROM NUM_OF_STUDENTS;
-- 3. To know how many distinct cities students come from
CREATE OR REPLACE VIEW CITIES AS (SELECT COUNT(DISTINCT(ADDRESS)) FROM STUDENT);
SELECT * FROM CITIES;
-- 4. To know which faculty is class advisor
CREATE OR REPLACE VIEW CA AS (SELECT CLASSADVISOR FROM SEMSEC);
SELECT * FROM CA;
-- 5. To know which student belongs to which section 
CREATE OR REPLACE VIEW STUDENT_SECTION AS (SELECT * FROM CLASS);
SELECT * FROM STUDENT_SECTION;
-- 6. To know the students from each year and the subjects they have (LIKE CLAUSE)
CREATE OR REPLACE VIEW 1ST_YEAR_DETAILS AS (SELECT * FROM STUDENT,SUBJECT WHERE STUDENT.USN LIKE '___20%' AND SUBJECT.SUBCODE LIKE '20%');
SELECT * FROM 1ST_YEAR_DETAILS;
CREATE OR REPLACE VIEW 2ND_YEAR_DETAILS AS (SELECT * FROM STUDENT,SUBJECT WHERE STUDENT.USN LIKE '___19%' AND SUBJECT.SUBCODE LIKE '19%');
SELECT * FROM 2ND_YEAR_DETAILS;
CREATE OR REPLACE VIEW 3RD_YEAR_DETAILS AS (SELECT * FROM STUDENT,SUBJECT WHERE STUDENT.USN LIKE '___18%' AND SUBJECT.SUBCODE LIKE '18%');
SELECT * FROM 3RD_YEAR_DETAILS;
CREATE OR REPLACE VIEW 4TH_YEAR_DETAILS AS (SELECT * FROM STUDENT,SUBJECT WHERE STUDENT.USN LIKE '___17%' AND SUBJECT.SUBCODE LIKE '17%');
SELECT * FROM 4TH_YEAR_DETAILS;
-- 7. To know which faculty is not class advisor
CREATE OR REPLACE VIEW NOTCA AS (SELECT FNAME FROM FACULTY WHERE FNAME NOT IN(SELECT CLASSADVISOR AS FNAME FROM SEMSEC));
SELECT * FROM NOTCA;
-- 8. To know who submitted assignments in ascending order
CREATE OR REPLACE VIEW SUBMISSION AS (SELECT USN,DOS FROM ASSIGNMENT ORDER BY DOS);
SELECT * FROM SUBMISSION;
-- 9. To know the number of students who submitted assignment after the deadline
CREATE OR REPLACE VIEW LATESUBMISSION AS (SELECT COUNT(LATEUSN) FROM(SELECT USN AS LATEUSN FROM ASSIGNMENT WHERE DOS>'2021-12-01')AS T );
SELECT * FROM LATESUBMISSION;
-- 10. To know how many students got 9 or above cgpa
CREATE OR REPLACE VIEW TOPPERS AS (SELECT COUNT(ABOVE90) FROM(SELECT USN AS ABOVE90 FROM REPORTCARD WHERE CGPA>=9) AS V);
SELECT * FROM TOPPERS;
-- 11. To get a report card for 8 students with cgpa of each and marks
CREATE OR REPLACE VIEW ALL_STUDENTS_REPORT AS (SELECT * FROM REPORTCARD);
SELECT * FROM ALL_STUDENTS_REPORT;
-- 12. To know the max marks scored by student from each year
CREATE OR REPLACE VIEW 1ST_YEAR_TOPPERMARKS AS (SELECT MAX(TOTAL) AS M FROM (SELECT TOTAL FROM REPORTCARD WHERE USN LIKE '___20%' )AS T);
CREATE OR REPLACE VIEW 1ST_YEAR_TOPPERNAME AS (SELECT USN FROM REPORTCARD,1ST_YEAR_TOPPERMARKS WHERE TOTAL=1ST_YEAR_TOPPERMARKS.M);
SELECT * FROM 1ST_YEAR_TOPPERNAME,1ST_YEAR_TOPPERMARKS;
CREATE OR REPLACE VIEW 2ND_YEAR_TOPPERMARKS AS (SELECT MAX(TOTAL) AS M FROM (SELECT TOTAL FROM REPORTCARD WHERE USN LIKE '___19%' )AS T);
CREATE OR REPLACE VIEW 2ND_YEAR_TOPPERNAME AS (SELECT USN FROM REPORTCARD,2ND_YEAR_TOPPERMARKS WHERE TOTAL=2ND_YEAR_TOPPERMARKS.M);
SELECT * FROM 2ND_YEAR_TOPPERNAME,2ND_YEAR_TOPPERMARKS;
CREATE OR REPLACE VIEW 3RD_YEAR_TOPPERMARKS AS (SELECT MAX(TOTAL) AS M FROM (SELECT TOTAL FROM REPORTCARD WHERE USN LIKE '___18%' )AS T);
CREATE OR REPLACE VIEW 3RD_YEAR_TOPPERNAME AS (SELECT USN FROM REPORTCARD,3RD_YEAR_TOPPERMARKS WHERE TOTAL=3RD_YEAR_TOPPERMARKS.M);
SELECT * FROM 3RD_YEAR_TOPPERNAME,3RD_YEAR_TOPPERMARKS;
CREATE OR REPLACE VIEW 4TH_YEAR_TOPPERMARKS AS (SELECT MAX(TOTAL) AS M FROM (SELECT TOTAL FROM REPORTCARD WHERE USN LIKE '___17%' )AS T);
CREATE OR REPLACE VIEW 4TH_YEAR_TOPPERNAME AS (SELECT USN FROM REPORTCARD,4TH_YEAR_TOPPERMARKS WHERE TOTAL=4TH_YEAR_TOPPERMARKS.M);
SELECT * FROM 4TH_YEAR_TOPPERNAME,4TH_YEAR_TOPPERMARKS;
-- 13. To know the min marks scored by student from each year
CREATE OR REPLACE VIEW 1ST_YEAR_LASTRANKHOLDERMARKS AS (SELECT MIN(TOTAL) AS M FROM (SELECT TOTAL FROM REPORTCARD WHERE USN LIKE '___20%' )AS T);
CREATE OR REPLACE VIEW 1ST_YEAR_LASTRANKHOLDERNAME AS (SELECT USN FROM REPORTCARD,1ST_YEAR_LASTRANKHOLDERMARKS WHERE TOTAL=1ST_YEAR_LASTRANKHOLDERMARKS.M);
SELECT * FROM 1ST_YEAR_LASTRANKHOLDERNAME,1ST_YEAR_LASTRANKHOLDERMARKS;
CREATE OR REPLACE VIEW 2ND_YEAR_LASTRANKHOLDERMARKS AS (SELECT MIN(TOTAL) AS M FROM (SELECT TOTAL FROM REPORTCARD WHERE USN LIKE '___19%' )AS T);
CREATE OR REPLACE VIEW 2ND_YEAR_LASTRANKHOLDERNAME AS (SELECT USN FROM REPORTCARD,2ND_YEAR_LASTRANKHOLDERMARKS WHERE TOTAL=2ND_YEAR_LASTRANKHOLDERMARKS.M);
SELECT * FROM 2ND_YEAR_LASTRANKHOLDERNAME,2ND_YEAR_LASTRANKHOLDERMARKS;
CREATE OR REPLACE VIEW 3RD_YEAR_LASTRANKHOLDERMARKS AS (SELECT MIN(TOTAL) AS M FROM (SELECT TOTAL FROM REPORTCARD WHERE USN LIKE '___18%' )AS T);
CREATE OR REPLACE VIEW 3RD_YEAR_LASTRANKHOLDERNAME AS (SELECT USN FROM REPORTCARD,3RD_YEAR_LASTRANKHOLDERMARKS WHERE TOTAL=3RD_YEAR_LASTRANKHOLDERMARKS.M);
SELECT * FROM 3RD_YEAR_LASTRANKHOLDERNAME,3RD_YEAR_LASTRANKHOLDERMARKS;
CREATE OR REPLACE VIEW 4TH_YEAR_LASTRANKHOLDERMARKS AS (SELECT MIN(TOTAL) AS M FROM (SELECT TOTAL FROM REPORTCARD WHERE USN LIKE '___17%' )AS T);
CREATE OR REPLACE VIEW 4TH_YEAR_LASTRANKHOLDERNAME AS (SELECT USN FROM REPORTCARD,4TH_YEAR_LASTRANKHOLDERMARKS WHERE TOTAL=4TH_YEAR_LASTRANKHOLDERMARKS.M);
SELECT * FROM 4TH_YEAR_LASTRANKHOLDERNAME,4TH_YEAR_LASTRANKHOLDERMARKS;
-- 14. To know highest marks scored in any subject for each year
CREATE OR REPLACE VIEW 1ST_YEAR_SUBJECTMARKS AS (SELECT MAX(SUBTOTAL) AS M FROM (SELECT SUBTOTAL FROM MARKS WHERE SUBCODE LIKE '20%' GROUP BY SUBCODE,SUBTOTAL)AS T);
CREATE OR REPLACE VIEW 1ST_YEAR_SUBTOPPER AS (SELECT USN FROM MARKS,1ST_YEAR_SUBJECTMARKS WHERE SUBTOTAL=1ST_YEAR_SUBJECTMARKS.M);
SELECT * FROM 1ST_YEAR_SUBTOPPER,1ST_YEAR_SUBJECTMARKS;
CREATE OR REPLACE VIEW 2ND_YEAR_SUBJECTMARKS AS (SELECT MAX(SUBTOTAL) AS M FROM (SELECT SUBTOTAL FROM MARKS WHERE SUBCODE LIKE '19%' GROUP BY SUBCODE,SUBTOTAL)AS T);
CREATE OR REPLACE VIEW 2ND_YEAR_SUBTOPPER AS (SELECT USN FROM MARKS,2ND_YEAR_SUBJECTMARKS WHERE SUBTOTAL=2ND_YEAR_SUBJECTMARKS.M);
SELECT * FROM 2ND_YEAR_SUBTOPPER,2ND_YEAR_SUBJECTMARKS;
CREATE OR REPLACE VIEW 3RD_YEAR_SUBJECTMARKS AS (SELECT MAX(SUBTOTAL) AS M FROM (SELECT SUBTOTAL FROM MARKS WHERE SUBCODE LIKE '18%' GROUP BY SUBCODE,SUBTOTAL)AS T);
CREATE OR REPLACE VIEW 3RD_YEAR_SUBTOPPER AS (SELECT USN FROM MARKS,3RD_YEAR_SUBJECTMARKS WHERE SUBTOTAL=3RD_YEAR_SUBJECTMARKS.M);
SELECT * FROM 3RD_YEAR_SUBTOPPER,3RD_YEAR_SUBJECTMARKS;
CREATE OR REPLACE VIEW 4TH_YEAR_SUBJECTMARKS AS (SELECT MAX(SUBTOTAL) AS M FROM (SELECT SUBTOTAL FROM MARKS WHERE SUBCODE LIKE '17%' GROUP BY SUBCODE,SUBTOTAL)AS T);
CREATE OR REPLACE VIEW 4TH_YEAR_SUBTOPPER AS (SELECT USN FROM MARKS,4TH_YEAR_SUBJECTMARKS WHERE SUBTOTAL=4TH_YEAR_SUBJECTMARKS.M);
SELECT * FROM 4TH_YEAR_SUBTOPPER,4TH_YEAR_SUBJECTMARKS;
-- 15. To know the sum of marks of 1 student of 2 subjects (AGGREGATE FUNCTION SUM)
CREATE OR REPLACE VIEW TOTAL_MARKS_OF_1_STUDENT AS (SELECT SUM(SUBTOTAL) FROM MARKS WHERE USN='ENG18CS0118');
SELECT * FROM TOTAL_MARKS_OF_1_STUDENT;
-- 16. To know the avg of marks of 1 student of 2 subjects (AGGREGATE FUNCTION AVG)
CREATE OR REPLACE VIEW AVG_MARKS_OF_1_STUDENT AS (SELECT AVG(SUBTOTAL) FROM MARKS WHERE USN='ENG18CS0118');
SELECT * FROM AVG_MARKS_OF_1_STUDENT;
-- 17. To get a report card for 1 student with usn,gradepoint,credit,subcode
CREATE OR REPLACE VIEW 1_STUDENT_REPORT AS (SELECT MARKS.USN,MARKS.SUBCODE,CREDITS,GRADEPOINT FROM MARKS,SUBJECT WHERE MARKS.USN= 'ENG18CS0118' AND SUBJECT.SUBCODE= MARKS.SUBCODE);
SELECT * FROM 1_STUDENT_REPORT;
-- 18. Procedure to check attendence for writing exam
DELIMITER //
CREATE PROCEDURE CHECKATTENDENCE()
BEGIN
	IF STUDENT.ATTENDENCE<70 THEN
		SELECT USN FROM STUDENT WHERE ATTENDENCE<70;
		SELECT 'ATTENDENCE NOT SUFFICIENT';
	END IF
END;//
DELIMITER;
-- 19. Procedure to check fees paid
DELIMITER //
CREATE PROCEDURE CHECKFEES()
BEGIN
	IF STUDENT.FEES=='N' THEN
		SELECT USN FROM STUDENT WHERE FEES=='N';
		SELECT 'FEES NOT PAID';
	END IF
END;//
DELIMITER;
-- 20. Procedure to check submission date and cut 5 marks for it
DELIMITER //
CREATE PROCEDURE LATEPENALTY()
BEGIN
	IF ASSIGNMENT.DOS>'2021-12-01' THEN
		UPDATE ASSIGNMENT.AMARKS=ASSIGNMENT.AMARKS-5 WHERE DOS>'2021-12-01';
		SELECT USN FROM ASSIGNMENT WHERE DOS>'2021-12-01';
		SELECT 'LATE SUBMISSION';
	END IF
END;//
DELIMITER;
